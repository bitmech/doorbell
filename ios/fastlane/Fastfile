default_platform(:ios)

APP_APPLE_ID = ENV["APP_APPLE_ID"]
BUNDLE_ID = ENV["BUNDLE_ID"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

def checkcodesigncerts(name)
  sh('security', 'find-identity', '-v', '-p', 'codesigning', '~/Library/Keychains/login.keychain-db')
end

platform :ios do
  lane :export_only do
    gym(
      configuration: "Release",
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
            BUNDLE_ID => "doorbell - prod" 
        }
      }
    )
  end

  lane :closed_beta do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key()
    
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    
    match(
      type: 'appstore',
      app_identifier: "#{BUNDLE_ID}",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

    checkcodesigncerts(keychain_name)

    gym(
      configuration: "Release",
      workspace: "Runner.xcworkspace",
      scheme: "Runner"
    )

    pilot(
      apple_id: "#{APP_APPLE_ID}",
      app_identifier: "#{BUNDLE_ID}",
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false,
      ipa: "./Runner.ipa"
    )

    delete_temp_keychain(keychain_name)
  end
end
